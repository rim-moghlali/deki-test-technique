{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\deki-test-technique\\\\client\\\\src\\\\components\\\\InfoModal.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Button, Modal } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function InfoModal() {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const handleModal = () => {\n    setIsModalOpen(() => !isModalOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: handleModal,\n      children: \"Stack Info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Technical stack :\",\n      open: isModalOpen,\n      onOk: handleModal,\n      onCancel: handleModal,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Server: NodeJs, Express with a REST API and Typescript\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Client: ReactJs, Axios, Ant Design and Typescript\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n_s(InfoModal, \"mLsII5HRP5G63IA/8vjZ5YHXWr8=\");\n_c = InfoModal;\nvar _c;\n$RefreshReg$(_c, \"InfoModal\");","map":{"version":3,"names":["useState","Button","Modal","InfoModal","isModalOpen","setIsModalOpen","handleModal"],"sources":["C:/wamp64/www/deki-test-technique/client/src/components/InfoModal.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { Button, Modal } from 'antd';\n\nexport default function InfoModal() {\n\tconst [isModalOpen, setIsModalOpen] = useState(false);\n\n\tconst handleModal = () => {\n\t\tsetIsModalOpen(() => !isModalOpen);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Button type=\"primary\" onClick={handleModal}>\n\t\t\t\tStack Info\n\t\t\t</Button>\n\t\t\t<Modal\n\t\t\t\ttitle=\"Technical stack :\"\n\t\t\t\topen={isModalOpen}\n\t\t\t\tonOk={handleModal}\n\t\t\t\tonCancel={handleModal}\n\t\t\t>\n\t\t\t\t<p>Server: NodeJs, Express with a REST API and Typescript</p>\n\t\t\t\t<p>Client: ReactJs, Axios, Ant Design and Typescript</p>\n\t\t\t</Modal>\n\t\t</>\n\t);\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM,EAAEC,KAAK,QAAQ,MAAM;AAAC;AAAA;AAErC,eAAe,SAASC,SAAS,GAAG;EAAA;EACnC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMM,WAAW,GAAG,MAAM;IACzBD,cAAc,CAAC,MAAM,CAACD,WAAW,CAAC;EACnC,CAAC;EAED,oBACC;IAAA,wBACC,QAAC,MAAM;MAAC,IAAI,EAAC,SAAS;MAAC,OAAO,EAAEE,WAAY;MAAA,UAAC;IAE7C;MAAA;MAAA;MAAA;IAAA,QAAS,eACT,QAAC,KAAK;MACL,KAAK,EAAC,mBAAmB;MACzB,IAAI,EAAEF,WAAY;MAClB,IAAI,EAAEE,WAAY;MAClB,QAAQ,EAAEA,WAAY;MAAA,wBAEtB;QAAA,UAAG;MAAsD;QAAA;QAAA;QAAA;MAAA,QAAI,eAC7D;QAAA,UAAG;MAAiD;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QACjD;EAAA,gBACN;AAEL;AAAC,GAvBuBH,SAAS;AAAA,KAATA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}